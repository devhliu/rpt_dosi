#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import datetime

import click
import rpt_dosi.db as rptdb
import pandas as pd

CONTEXT_SETTINGS = dict(help_option_names=["-h", "--help"])


def get_alphabet_position(label):
    if len(label) == 1:
        return ord(label) - ord("A")
    elif len(label) == 2:
        return (ord(label[0]) - ord("A") + 1) * 26 + (ord(label[1]) - ord("A"))
    else:
        raise ValueError("Label length must be 1 or 2.")


@click.command(context_settings=CONTEXT_SETTINGS)
@click.option("--db_file", "--db", required=True, help="Input db.json")
@click.option("--name", "-n", required=True, help="Patient initials")
@click.option("--xls", required=True, help="Input excel db")
@click.option(
    "--output", "-o", default=None, help="Output json (same as input if None)"
)
def go(db_file, name, xls, output):
    # open db as a dict
    db = rptdb.db_load(db_file)

    # open excel db
    df = pd.read_excel(xls)
    target_row = df[df.iloc[:, 0] == name]
    if target_row.empty:
        print(f'Cannot find the patient {name}')
        exit()

    # index
    cindex = [
        get_alphabet_position("R"),
        get_alphabet_position("AI"),
        get_alphabet_position("AP"),
        get_alphabet_position("AW"),
        get_alphabet_position("BD"),
        get_alphabet_position("BK"),
    ]
    # print(cindex)

    # loop on cycle
    i = 0
    for c, cycle in db["cycles"].items():
        d = target_row.iloc[0, cindex[i]]
        if type(d) is str:
            d = datetime.datetime.strptime(d, "%d/%m/%Y %H:%M")
        dt = d.strftime("%Y-%m-%d %H:%M:%S")
        d = target_row.iloc[0, cindex[i] - 1]
        ac = d
        rad = {
            "radionuclide": "LU177",
            "datetime": dt,
            "activity_MBq": ac,
        }
        if "injection" in cycle:
            cycle["injection"].update(rad)
        else:
            cycle["injection"] = rad
        print(f"Cycle {c} : {rad}")

        # next cycle index
        i = i + 1

    rptdb.db_save(db, output, db_file)


# --------------------------------------------------------------------------
if __name__ == "__main__":
    go()
